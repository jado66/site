[{"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\index.js":"1","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\App.js":"2","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\reportWebVitals.js":"3","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\components\\gameBoy.js":"4","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameDemos\\asteriods.js":"5","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\physicsDemos\\gravityDemo.js":"6","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameDemos\\flappyDemo.js":"7","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\components\\advButton.js":"8","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\components\\stopwatch.js":"9","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\physicsObjects\\starAttractor.js":"10","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\flappyManager.js":"11","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\physicsObjects\\planetMover.js":"12","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\asteriods\\asteriodsManager.js":"13","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\flappyBird.js":"14","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\physicsObjects\\object2D.js":"15","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\pipe.js":"16","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\asteriods\\bullet.js":"17","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\asteriods\\asteriodRock.js":"18","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\asteriods\\asteriodPlayer.js":"19","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\components\\navbar.js":"20","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\vr\\vrpage.js":"21"},{"size":500,"mtime":1632769812613,"results":"22","hashOfConfig":"23"},{"size":3497,"mtime":1633723516385,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1632769812742,"results":"25","hashOfConfig":"23"},{"size":9771,"mtime":1633724117987,"results":"26","hashOfConfig":"23"},{"size":910,"mtime":1633229982466,"results":"27","hashOfConfig":"23"},{"size":3331,"mtime":1633718165571,"results":"28","hashOfConfig":"23"},{"size":880,"mtime":1633144575174,"results":"29","hashOfConfig":"23"},{"size":369,"mtime":1632866791793,"results":"30","hashOfConfig":"23"},{"size":1182,"mtime":1632933374985,"results":"31","hashOfConfig":"23"},{"size":410,"mtime":1633026524599,"results":"32","hashOfConfig":"23"},{"size":4067,"mtime":1633144900209,"results":"33","hashOfConfig":"23"},{"size":2100,"mtime":1633026078858,"results":"34","hashOfConfig":"23"},{"size":5855,"mtime":1633273018044,"results":"35","hashOfConfig":"23"},{"size":3147,"mtime":1633229910764,"results":"36","hashOfConfig":"23"},{"size":3908,"mtime":1633227889377,"results":"37","hashOfConfig":"23"},{"size":4333,"mtime":1633144580782,"results":"38","hashOfConfig":"23"},{"size":860,"mtime":1633229164506,"results":"39","hashOfConfig":"23"},{"size":6136,"mtime":1633273080999,"results":"40","hashOfConfig":"23"},{"size":5831,"mtime":1633230036925,"results":"41","hashOfConfig":"23"},{"size":394,"mtime":1633723539098,"results":"42","hashOfConfig":"23"},{"size":4026,"mtime":1633729481190,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"fvro31",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\index.js",[],["96","97"],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\App.js",["98","99","100","101"],"import './App.css';\r\nimport profile from './Profile.jpg' \r\nimport React, { useState } from 'react';\r\nimport { VRPage } from './vr/vrpage';\r\nimport { NavBar } from './components/navbar';\r\nimport { GameBoy } from './components/gameBoy';\r\nimport { GravityDemo } from './demos/physicsDemos/gravityDemo';\r\nimport { FlappyBirdDemo } from './demos/gameDemos/flappyDemo';\r\nimport { AsteriodDemo } from './demos/gameDemos/asteriods';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// import canvasGame from \r\n\r\nfunction App() {\r\n  return(\r\n    <Router>\r\n      <Switch>\r\n        {/* <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/users\">\r\n          <Users />\r\n        </Route> */}\r\n        <Route exact path=\"/\">\r\n          <Mainpage />\r\n        </Route>\r\n        <Route exact path=\"/site\">\r\n          <Mainpage />\r\n        </Route>\r\n        <Route exact path=\"/vr\">\r\n          <VRPage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nconst Mainpage = () => {\r\n  const [mousePosition, setMousePosition] = useState({left: 0,top: 0})\r\n  const [winDimensions, setWinDimensions] = useState({ \r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n  const [canScrollX, setCanScrollX] = useState(true);\r\n  const [debugDisplay, setDebugDisplay] = useState(\"none\")\r\n\r\n  React.useEffect(() => {\r\n    function handleResize() {\r\n      setWinDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    window.onscroll = function () {\r\n      if (canScrollX===false)\r\n        window.scrollTo(0,window.scrollY);\r\n    };\r\n  })\r\n\r\n  function toggleDebug(){\r\n    if (debugDisplay === \"\"){\r\n      setDebugDisplay(\"none\");\r\n    }else{\r\n      setDebugDisplay('')\r\n    }\r\n  }\r\n  \r\n\r\n  function handleMouseMove(ev) { setMousePosition({left: ev.pageX, top: ev.pageY}); }\r\n  return (\r\n    <div className=\"App\" onMouseMove={(ev)=> handleMouseMove(ev)} >\r\n      <header className=\"App-header\">\r\n      <NavBar showDebug = {()=>toggleDebug()}></NavBar>\r\n      </header>\r\n      {/* <canvas id = \"canvas\" ></canvas> */}\r\n      <div id = \"HomeDiv\" className = \"section\">\r\n        {/* <h1>Home</h1> */}\r\n        {/* <img src = {profile} alt=\"Profile\"></img> */}\r\n      </div>\r\n      <div id = \"AboutDiv\" className = \"section\">\r\n        <h1>About</h1>\r\n      </div>\r\n      <div id = \"PortfolioDiv\" className = \"section\">\r\n        <h1>Portfolio</h1>\r\n        All demos in the porftolio are interactable. Click on a demo to begin.\r\n        <h3>Physics Demos</h3>\r\n        <GravityDemo/>\r\n        <h3>Game Dev Demos</h3>\r\n        <FlappyBirdDemo/>\r\n        <AsteriodDemo/>\r\n      </div>\r\n      <div id = \"VRDiv\" className = \"section\">\r\n        <h1>Enter VR Portfolio</h1>\r\n        <Link to=\"/vr\">VR</Link>\r\n\r\n      </div>\r\n      <div id = \"ContactDiv\" className = \"section\">\r\n        <h1>Contact</h1>\r\n      </div>\r\n      <div id = \"debugDiv\" className=\"Debug\" style={{display:debugDisplay}}>\r\n        <div style={{display:'block'}}>\r\n        <h1 style={{display:'inline', marginRight:\"100px\"}}>Debug</h1>\r\n        <button onClick={()=>{toggleDebug()}}>Hide</button>\r\n        </div>\r\n        \r\n        {`Mouse Coords = ${mousePosition.left},${mousePosition.top}\\n\r\n        Window Dims  = ${winDimensions.width},${winDimensions.height}`}\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n\r\n\r\n\r\n\r\nexport default App;","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\reportWebVitals.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\components\\gameBoy.js",["102","103","104","105","106"],"import { useStopwatch } from 'react-timer-hook';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { AdvButton } from './advButton';\r\nimport {Stopwatch} from './stopwatch'\r\nexport class GameBoy extends React.Component{\r\n    constructor(props){\r\n\r\n      super(props);\r\n\r\n      // this.ctx = this.canvas.getContext('2d');\r\n      this.backgroundColor = props.backgroundColor;\r\n      // alert(`Game objects are ${JSON.stringify(props.gameObjects)}`)\r\n\r\n      this.state = {\r\n        name: props.name,\r\n        loopFunctionID:0,\r\n        isPaused:true,\r\n        gameObjects:props.gameObjects,\r\n        draggedObject: null,\r\n        time:new Date(),\r\n        hasStarted:false,\r\n        setIntervalID:0,\r\n        stopwatchState:\"reset\",\r\n        canvasDims:props.canvasDims,\r\n        mouseCoords:{x:0,y:0},\r\n      }\r\n\r\n      this.extraButtonProps = props.extraButtons;\r\n\r\n      this.canvasEventOptions = props.eventOptions;\r\n      // alert(JSON.stringify(this.canvasEventOptions))\r\n\r\n      this.clickableObjects = []\r\n      this.actionOnSpaceObjects = []\r\n      \r\n        // create a list of clickable objects from props.objects\r\n        props.gameObjects.forEach(object=>{\r\n          if (object.clickable){\r\n            // alert(\"Adding clickable object\")\r\n            this.clickableObjects.push(object);\r\n          }\r\n        })\r\n        props.gameObjects.forEach(object=>{\r\n          if (object.isThereAnActionOnSpace){\r\n            // alert(\"Adding space action object\")\r\n            this.actionOnSpaceObjects.push(object);\r\n          }\r\n        })\r\n\r\n\r\n        // // this.initializeGameboy = this.initializeGameboy.bind(this);\r\n      // this.canvasRef = React.useRef(null);\r\n    }\r\n\r\n    addCanvasEvents(){\r\n      var cRect = this.canvas.getBoundingClientRect();        // Gets CSS pos, and width/height\r\n      var demoComponent = this;\r\n\r\n      // If drag is an option\r\n      if (this.canvasEventOptions.includes(\"drag\")){\r\n\r\n        var clickableObjects = this.clickableObjects;\r\n        var draggedObject = this.draggedObject;\r\n\r\n        this.canvas.addEventListener(\"mouseup\",function(e){\r\n          \r\n          demoComponent.setState({draggedObject:null});\r\n        });\r\n\r\n        this.canvas.addEventListener(\"mousedown\",function(e){\r\n          if (demoComponent.state.hasStarted === false)\r\n            return\r\n          var canvasX = Math.round(e.clientX - cRect.left);  // Subtract the 'left' of the canvas \r\n          var canvasY = Math.round(e.clientY - cRect.top);  \r\n          \r\n          // this.clickableObjects.length\r\n\r\n          for (var i = 0; i < clickableObjects.length; i++){\r\n            if (clickableObjects[i].mouseHit({x:canvasX,y:canvasY})){\r\n              if (clickableObjects[i].draggable){\r\n                demoComponent.setState({draggedObject:clickableObjects[i]});\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          // draggedObject = null;\r\n        })\r\n      \r\n        this.canvas.addEventListener(\"mousemove\", function(e) { \r\n          var canvasX = Math.round(e.clientX - cRect.left);  // Subtract the 'left' of the canvas \r\n          var canvasY = Math.round(e.clientY - cRect.top);   // from the X/Y positions to make \r\n          demoComponent.state.mouseCoords.x = canvasX;\r\n          demoComponent.state.mouseCoords.y = canvasY; \r\n\r\n          if (demoComponent.state.draggedObject == null || demoComponent.state.draggedObject == undefined){\r\n            return;\r\n\r\n          }\r\n          // alert(`Mouse move (${canvasX},${canvasY})`)\r\n          demoComponent.state.draggedObject.x = canvasX;\r\n          demoComponent.state.draggedObject.y = canvasY;\r\n            // ctx.clearRect(0, 0, canvas.width, canvas.height);  // (0,0) the top left of the canvas\r\n            \r\n        });\r\n      }\r\n\r\n      // If space is an option\r\n      if (this.canvasEventOptions.includes(\"space\")){\r\n        window.addEventListener('keydown',(e)=>{\r\n          if(e.key === \" \"|| e.key === \"Spacebar\"){\r\n            e.preventDefault();\r\n            this.actionOnSpaceObjects.forEach(object=>{\r\n              object.actionOnSpace();\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n      // alert(this.canvasEventOptions.includes(\"left\"))\r\n\r\n      if (this.canvasEventOptions.includes(\"left\")){\r\n        // alert(\"adding left events\")\r\n        window.addEventListener('keydown',(e)=>{\r\n          if(e.key === \"ArrowLeft\"|| e.key === \"A\"){\r\n            e.preventDefault();\r\n            demoComponent.state.gameObjects[0].actionOnLeftKeyDown();\r\n          }\r\n        })\r\n        window.addEventListener('keyup',(e)=>{\r\n          if(e.key === \"ArrowLeft\"|| e.key === \"A\"){\r\n            e.preventDefault();\r\n            demoComponent.state.gameObjects[0].actionOnLeftKeyUp();\r\n          }\r\n        })\r\n      }\r\n      if (this.canvasEventOptions.includes(\"right\")){\r\n        window.addEventListener('keydown',(e)=>{\r\n          if(e.key === \"ArrowRight\"|| e.key === \"D\"){\r\n            e.preventDefault();\r\n            demoComponent.state.gameObjects[0].actionOnRightKeyDown();\r\n          }\r\n        })\r\n        window.addEventListener('keyup',(e)=>{\r\n          if(e.key === \"ArrowRight\"|| e.key === \"D\"){\r\n            e.preventDefault();\r\n            demoComponent.state.gameObjects[0].actionOnRightKeyUp();\r\n          }\r\n        })\r\n      }\r\n      if (this.canvasEventOptions.includes(\"up\")){\r\n        window.addEventListener('keydown',(e)=>{\r\n          if(e.key === \"ArrowUp\"|| e.key === \"W\"){\r\n            e.preventDefault();\r\n            demoComponent.state.gameObjects[0].actionOnUpKeyDown();\r\n          }\r\n        })\r\n        window.addEventListener('keyup',(e)=>{\r\n          if(e.key === \"ArrowUp\"|| e.key === \"W\"){\r\n            e.preventDefault();\r\n            demoComponent.state.gameObjects[0].actionOnUpKeyUp();\r\n          }\r\n        })\r\n      }\r\n    }\r\n        \r\n\r\n    async componentDidMount() {\r\n\r\n      this.canvas = document.getElementById(`${this.state.name}Canvas`)\r\n      this.ctx = this.canvas.getContext('2d');\r\n\r\n      if (this.canvas === undefined){\r\n        alert(`${this.state.name}Canvas is undefined`)\r\n      }\r\n      else if (this.canvas === null){\r\n        alert(`${this.state.name}Canvas is undefined`)\r\n      }\r\n      else{\r\n        // alert(JSON.stringify(this.ctx))\r\n      }\r\n\r\n      // alert(\"Gameboy ctx\"+JSON.stringify(this.ctx))\r\n      this.initializeObjects();       \r\n      \r\n    }\r\n\r\n    initializeObjects(){\r\n      this.state.gameObjects.forEach(object=>{\r\n        object.setContext(this.ctx);\r\n        object.setGameBoy(this) // set a connection to the gameboy\r\n        object.draw();\r\n      })\r\n     }\r\n\r\n    pauseDemo = () => {\r\n      this.setState({isPaused: true,stopwatchState:\"pause\"});\r\n    }\r\n\r\n    drawCanvas = (shouldAlert) =>{\r\n      // if (shouldAlert)\r\n      // alert(`There are ${this.state.gameObjects.length} objects I will be drawing`)\r\n      this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n      this.state.gameObjects.forEach(object=>{\r\n        object.draw()\r\n      })\r\n    }\r\n    updateCanvas = () =>{\r\n      \r\n      if (this.state.isPaused){\r\n        this.drawCanvas();\r\n        return;\r\n      }\r\n  \r\n      // alert(`${this.state.gameObjects.length}`)\r\n\r\n      this.state.gameObjects.forEach(object=>{\r\n        object.update()\r\n      })\r\n  \r\n      this.drawCanvas();\r\n    }\r\n    startContinueDemo = () =>{\r\n      // fix from here\r\n      // alert(JSON.stringify(this.state))\r\n      if (this.state.hasStarted === false){ // Start demo\r\n        //start\r\n        this.setState({isPaused: false,hasStarted:true,stopwatchState:\"start\"});\r\n        var setIntervalID = setInterval(this.updateCanvas, 10);\r\n        this.setState({setIntervalID:setIntervalID})\r\n\r\n        this.addCanvasEvents();\r\n\r\n      }\r\n      else{\r\n        if (this.state.isPaused){\r\n          this.setState({isPaused:false,stopwatchState:\"resume\"})\r\n        }\r\n        else{\r\n          this.pauseDemo()\r\n        }\r\n      }\r\n      \r\n    }\r\n    stopDemo = () =>{\r\n      clearInterval(this.state.setIntervalID);\r\n\r\n      this.setState({isPaused:true,hasStarted:false,setIntervalID:0,stopwatchState:\"reset\"})\r\n      this.state.gameObjects.forEach(object=>{\r\n        object.reset()\r\n      })\r\n      this.drawCanvas();\r\n    }\r\n    render(){\r\n      var canvasName = `${this.state.name}Canvas`;\r\n      var extraButtons = null;\r\n      if (this.extraButtonProps){\r\n        extraButtons = this.extraButtonProps.map((button) =>\r\n        <AdvButton key = {this.state.name+button.text} onClick = {button.onClick} width={\"150px\"} height={\"50px\"} text = {button.text}></AdvButton>\r\n        );\r\n      }\r\n     \r\n      return(\r\n      <div className=\"demoDiv div3DBottom\" style={{width:\"1202px\", border:\"1px solid #EEE4E8\", backgroundColor:\"#4BB2B9\", marginRight:\"auto\", marginLeft:\"auto\", borderRadius:\"10px\"}} >\r\n        <div style={{position:\"relative\"}}>\r\n          <canvas id = {canvasName} className=\"div3DTop\" width=\"1180px\" height=\"600px\" style={{border:\"1px solid white\", backgroundColor:this.backgroundColor, margin:\"10px\", borderRadius:\"10px\"}} />\r\n          <div style={{position:\"absolute\",color:'white',top:20,right:20, fontSize:\"20px\"}}>\r\n            <Stopwatch stopwatchState={this.state.stopwatchState}/>\r\n          </div>\r\n       \r\n        </div>\r\n          <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-evenly\", marginBottom:\"14px\"}}>\r\n          <AdvButton onClick = {this.startContinueDemo} width={\"150px\"} height={\"50px\"} text = {this.state.isPaused?(!this.state.hasStarted?\"Start\":\"Continue\"):\"Pause\"}></AdvButton>\r\n          <AdvButton onClick = {()=>{this.stopDemo();}} width={\"150px\"} height={\"50px\"} text = {\"Stop\" }></AdvButton>\r\n          {extraButtons!= null && extraButtons}\r\n          </div>      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameDemos\\asteriods.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\physicsDemos\\gravityDemo.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameDemos\\flappyDemo.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\components\\advButton.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\components\\stopwatch.js",["107","108","109","110","111","112","113","114"],"import { useStopwatch } from 'react-timer-hook';\r\nimport React, { useEffect } from 'react';\r\n\r\nexport function Stopwatch(props){\r\n    var {\r\n      seconds,\r\n      minutes,\r\n      hours,\r\n      days,\r\n      isRunning,\r\n      start,\r\n      pause,\r\n      reset,\r\n    } = useStopwatch({ autoStart: false });\r\n  \r\n    React.useEffect(() => {\r\n      // alert(props.stopwatchState)\r\n      \r\n        switch(props.stopwatchState){\r\n            case \"pause\":\r\n                pause();\r\n                break;\r\n            case \"resume\":\r\n                start();\r\n                break;\r\n            case \"start\":\r\n                reset();\r\n                break;\r\n            case \"reset\":\r\n                reset();\r\n                pause();\r\n                seconds = 0;\r\n                minutes = 0;\r\n                hours = 0;\r\n                days = 0;\r\n                break;\r\n            default:\r\n                // alert(`State ${props.stopwatchState} does not exist`)\r\n                break;\r\n      }\r\n    }, [props.stopwatchState]);\r\n    \r\n    return(\r\n      <div>\r\n        <span>{`0${minutes}`.slice(-2)}</span>:<span>{`0${seconds}`.slice(-2)}</span>\r\n      </div>\r\n    )\r\n  \r\n  }","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\physicsObjects\\starAttractor.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\flappyManager.js",["115"],"import { FlappyBird } from \"./flappyBird\";\r\nimport { Pipe } from \"./pipe\";\r\n\r\nexport class FlappyManager{\r\n    constructor(difficulty, canvasDims){\r\n        this.canvasDims =canvasDims;\r\n        this.bird = new FlappyBird(this,{x:this.canvasDims.width/2,y:this.canvasDims.height/2});\r\n\r\n        this.startingX = 3*this.canvasDims.width/4;\r\n        this.spacing = 250;\r\n        this.gap = 300;\r\n        this.difficulty = difficulty;\r\n\r\n        this.pipes = [];\r\n        this.startingPipeCount = 2;\r\n\r\n        this.isThereAnActionOnSpace = true;\r\n\r\n\r\n    }\r\n    setContext(ctx){\r\n        // alert(\"manger ctx\" +JSON.stringify(ctx))\r\n        this.ctx =ctx;\r\n        this.bird.setContext(this.ctx);\r\n        \r\n\r\n        this.setUpDemo();\r\n\r\n        // alert(JSON.stringify(this.ctx))\r\n\r\n    }\r\n\r\n    setGameBoy(gameBoy){\r\n        this.gameBoy = gameBoy;\r\n    }\r\n\r\n    changeDifficulty(diff, force =false){\r\n        \r\n        if (diff === this.difficulty && !force){\r\n            return;\r\n        }\r\n        else{\r\n            this.difficulty = diff;\r\n        }\r\n        // alert(diff)\r\n        switch(diff){\r\n            case \"easy\":\r\n                this.gap = 300;\r\n                this.bird.color = \"yellow\";\r\n                this.bird.naturalColor = \"yellow\"\r\n                this.gameBoy.backgroundColor = \"#b5cef5\"\r\n                break;\r\n            case \"med\":\r\n                this.gap = 240;\r\n                this.bird.color = \"orange\";\r\n                this.bird.naturalColor = \"orange\"\r\n                this.gameBoy.backgroundColor = \"#6d99de\"\r\n                break;\r\n            case \"hard\":\r\n                this.bird.color = \"blue\";\r\n                this.bird.naturalColor = \"blue\"\r\n                this.gameBoy.backgroundColor = \"#2f5287\"\r\n                this.gap = 200;\r\n                break;\r\n        }\r\n        if(this.gameBoy.state.hasStarted === false){\r\n            this.gameBoy.stopDemo();\r\n        }\r\n    }\r\n\r\n    setUpDemo(){\r\n        this.pipes = []\r\n\r\n        for (var i = 0; i < this.startingPipeCount; i++){\r\n            var bottomPipe = new Pipe(this,{x:this.startingX+this.spacing*i,y:(this.canvasDims.height-this.gap)/2+this.gap},this.bird,this.spacing,true) \r\n            var topPipe = new Pipe(this,{x:this.startingX+this.spacing*i,y:(this.canvasDims.height-this.gap)/2},this.bird,this.spacing,false)\r\n            bottomPipe.setContext(this.ctx)\r\n            topPipe.setContext(this.ctx)\r\n            this.pipes.push(bottomPipe);\r\n            this.pipes.push(topPipe);\r\n\r\n        }\r\n    }\r\n    reset(){\r\n        this.bird.reset();\r\n        this.changeDifficulty(this.difficulty)\r\n        // alert(\"reset\")\r\n        this.pipes = []\r\n        this.setUpDemo();\r\n        // this.setUpDemo();\r\n    }\r\n\r\n    stopGame(){\r\n        this.gameBoy.stopDemo();\r\n    }\r\n\r\n    actionOnSpace(){\r\n        this.bird.flap();\r\n    }\r\n\r\n    createNewPipeCallBack(){\r\n        // alert(JSON.stringify(this))\r\n        var randomHeight =Math.floor(Math.random()*(this.canvasDims.height-this.gap-20))+this.gap+20\r\n        var bottomPipe = new Pipe(this,{x:this.canvasDims.width,y:randomHeight},this.bird,this.spacing,true) \r\n        var topPipe = new Pipe(this,{x:this.canvasDims.width,y:randomHeight-this.gap},this.bird,this.spacing,false)\r\n        bottomPipe.setContext(this.ctx)\r\n        topPipe.setContext(this.ctx)\r\n        this.pipes.push(bottomPipe);\r\n        this.pipes.push(topPipe);\r\n        // this.pipes.push(new Pipe(this,{x:this.canvasDims.width,y:randomHeight},this.ctx,this.bird,this.spacing,true))\r\n        // this.pipes.push(new Pipe(this,{x:this.canvasDims.height,y:randomHeight-this.gap},this.ctx,this.bird,this.spacing,false))\r\n    };\r\n\r\n    deletePipeCallback(){\r\n        this.pipes.shift()\r\n        this.pipes.shift()\r\n    }\r\n\r\n    draw(){\r\n        // alert(\"hi\")\r\n        this.pipes.forEach(pipe=>{\r\n            pipe.draw();\r\n        })\r\n        this.bird.draw();\r\n\r\n    }\r\n\r\n    update(){\r\n        this.bird.update();\r\n        this.pipes.forEach(pipe=>{\r\n            pipe.update();\r\n        })\r\n\r\n        // this.draw();\r\n\r\n    }\r\n\r\n}","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\physicsObjects\\planetMover.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\asteriods\\asteriodsManager.js",["116","117","118"],"import { AsteriodsPlayer } from \"./asteriodPlayer\";\r\nimport { AsteriodRock } from \"./asteriodRock\";\r\nimport { AsteriodBullet } from \"./bullet\";\r\n\r\nexport class AsteriodManager{\r\n    constructor(canvasDims){\r\n        this.canvasDims =canvasDims;\r\n        this.user = new AsteriodsPlayer(this,{x:this.canvasDims.width/2,y:this.canvasDims.height/2});\r\n\r\n        this.level = 1;\r\n\r\n        this.enemies = [];\r\n        this.bullets = [];\r\n\r\n        this.isThereAnActionOnSpace = true;\r\n       \r\n\r\n    }\r\n    \r\n    actionOnLeftKeyDown() {this.user.leftIsDown = true}//callback\r\n    actionOnRightKeyDown()  {this.user.rightIsDown = true}//\r\n    actionOnLeftKeyUp(){this.user.leftIsDown = false}//}\r\n    actionOnRightKeyUp(){this.user.rightIsDown = false}\r\n    actionOnUpKeyUp(){this.user.upIsDown = false}\r\n    actionOnUpKeyDown(){this.user.upIsDown = true}\r\n\r\n\r\n    setContext(ctx){\r\n        this.ctx =ctx;\r\n        this.user.setContext(this.ctx);\r\n\r\n        this.setUpDemo();\r\n\r\n    }\r\n\r\n    setGameBoy(gameBoy){\r\n        this.gameBoy = gameBoy;\r\n    }\r\n\r\n    changeLevel(level){\r\n        this.level = level;\r\n        this.user.setLevel(level);\r\n    }\r\n\r\n    spawnLargeRock(){\r\n        var id = this.enemies.length;\r\n        var startingPos = {x:Math.random()*this.ctx.canvas.width,y:Math.random()*this.ctx.canvas.height};\r\n        var newRock = new AsteriodRock(this,startingPos,{dx:0,dy:0}, \"large\",id);\r\n        newRock.setContext(this.ctx)\r\n        this.enemies.push(newRock);\r\n    }\r\n\r\n    spawnMedRocks(largeRock){\r\n        var startingX = largeRock.x;\r\n        var startingY = largeRock.y;\r\n        var startingDx = largeRock.dx;\r\n        var startingDy = largeRock.dy;\r\n\r\n        var numberOfRocks = Math.floor(Math.random()*2)+2;\r\n\r\n        for (var i = 0; i< numberOfRocks; i++){\r\n            var id = this.enemies.length;\r\n            var x = Math.random()*20-10 + startingX;\r\n            var y = Math.random()*20-10 + startingY;\r\n            var dx = Math.random()*1-.5 + startingDx;\r\n            var dy = Math.random()*1-.5 + startingDy;\r\n\r\n            var newRock = new AsteriodRock(this,{x:x,y:y},{dx:dx,dy:dy},\"med\",id)\r\n            newRock.setContext(this.ctx);\r\n            this.enemies.push(newRock);\r\n        }\r\n    }\r\n    spawnSmallRocks(medRock){\r\n        var startingX = medRock.x;\r\n        var startingY = medRock.y;\r\n        var startingDx = medRock.dx;\r\n        var startingDy = medRock.dy;\r\n\r\n        var numberOfRocks = Math.floor(Math.random()*2)+2;\r\n\r\n        for (var i = 0; i< numberOfRocks; i++){\r\n            var id = this.enemies.length;\r\n            var x = Math.random()*20-10 + startingX;\r\n            var y = Math.random()*20-10 + startingY;\r\n            var dx = Math.random()*1-.5 + startingDx;\r\n            var dy = Math.random()*1-.5 + startingDy;\r\n\r\n            var newRock = new AsteriodRock(this,{x:x,y:y},{dx:dx,dy:dy},\"small\",id)\r\n            newRock.setContext(this.ctx);\r\n            this.enemies.push(newRock);\r\n        }\r\n    }\r\n\r\n    spawnBullet(){\r\n        var startingPos = {x:this.user.x,y:this.user.y};\r\n        var startingVel = {dx:this.user.dx,dy:this.user.dy};\r\n\r\n        startingVel.dx += Math.cos(this.user.getRad(90)) * this.user.bulletSpeed;\r\n        startingVel.dy += Math.sin(this.user.getRad(90)) * this.user.bulletSpeed;\r\n        // alert(JSON.stringify(startingVel))\r\n        \r\n        var newBullet = new AsteriodBullet(this,startingPos, startingVel);\r\n        newBullet.setContext(this.ctx)\r\n        this.bullets.push(newBullet);\r\n    }\r\n\r\n    handlePlayerCollisions(){\r\n        this.enemies.forEach(enemy=>{\r\n            if (!enemy.dead){  \r\n                var hit = this.checkForHit(enemy,this.user)\r\n                if (hit){\r\n                    // alert(\"hit by \"+enemy.id)\r\n                    this.user.die()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleBulletCollisions(){\r\n        this.bullets.forEach(bullet=>{\r\n            if (!bullet.dead){                \r\n                this.enemies.forEach(enemy=>{\r\n                    if (!bullet.dead){ \r\n                        var hit = this.checkForHit(bullet,enemy);\r\n                        if (hit){\r\n                            // alert(\"hit\")\r\n                            bullet.die()\r\n                            enemy.takeDamage(this.user.bulletDamage)\r\n                        };\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    checkForHit(object1,object2){\r\n        var dist2 = object1.calcDistance2({x:object2.x,y:object2.y})\r\n        var circles2 = Math.pow(object1.circleSize,2)+Math.pow(object2.circleSize,2);\r\n        \r\n        return (dist2 < circles2)\r\n    }\r\n\r\n    setUpDemo(){\r\n        this.enemies = []\r\n\r\n        for (var i = 0; i < 5; i++){\r\n            this.spawnLargeRock();\r\n        }\r\n        // create random asteriods\r\n    }\r\n    reset(){\r\n        this.user.reset();\r\n\r\n        this.setUpDemo();\r\n    }\r\n\r\n    stopGame(){\r\n        this.gameBoy.stopDemo();\r\n    }\r\n\r\n    actionOnSpace(){\r\n        // alert(\"spawn bullet\")\r\n        this.spawnBullet();\r\n    }\r\n\r\n    changeLevel(incrementLevelBool){\r\n        if (incrementLevelBool){\r\n            if (this.level != 10){\r\n                this.level++;\r\n            }\r\n        }\r\n        else {\r\n            if (this.level != 0){\r\n                this.level++;\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(){\r\n        this.enemies.forEach(enemy=>{\r\n            enemy.draw();\r\n        })\r\n        this.bullets.forEach(bullet=>{\r\n            bullet.draw();\r\n        })\r\n        this.user.draw();\r\n\r\n    }\r\n\r\n    update(){\r\n        this.enemies.forEach(enemy=>{\r\n            enemy.update();\r\n        })\r\n        this.bullets.forEach(bullet=>{\r\n            bullet.update();\r\n        })\r\n        this.user.update();\r\n        this.handlePlayerCollisions();\r\n        this.handleBulletCollisions();\r\n    }\r\n\r\n}","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\flappyBird.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\physicsObjects\\object2D.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\pipe.js",["119"],"import { Object2D } from \"../physicsObjects/object2D\";\r\n\r\n\r\nexport class Pipe extends Object2D{\r\n    constructor(parent,startingCoords,bird,spacing,isBottom){\r\n        super(startingCoords,{dx:-1.8,dy:0},null);\r\n        this.parent = parent;\r\n        this.color = \"green\";\r\n        this.width = 60;\r\n        this.topHeight = 20;\r\n        this.bird = bird\r\n        this.triggeredNewPipe = false;\r\n        this.spacing = spacing;\r\n        this.isBottom = isBottom;\r\n        this.y2 = 0;\r\n    }\r\n\r\n    update(){\r\n\r\n        super.update()\r\n       \r\n        if (this.bird.x +20 > this.x && this.bird.x-20<=this.x+this.width){\r\n            if (this.checkForHit()){\r\n                this.bird.die(); \r\n            }\r\n        }\r\n        else{\r\n        }\r\n        \r\n        if (this.isBottom){\r\n            if ((Math.abs((this.ctx.canvas.width-this.spacing) - this.x) < 1 ) && this.triggeredNewPipe === false){\r\n                this.parent.createNewPipeCallBack();\r\n                this.triggeredNewPipe = true;\r\n            }\r\n            else if (this.x+this.width < 0){\r\n                \r\n                this.parent.deletePipeCallback();\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    setContext(ctx){\r\n        super.setContext(ctx);\r\n        this.y2 = (this.isBottom?this.ctx.canvas.height:1)\r\n    }\r\n\r\n    checkForHit(){\r\n        // function checkOverlap(R, Xc, Yc, X1, Y1, X2, Y2)\r\n        var birdR = 20\r\n    \r\n        // Find the nearest polet on the\r\n        // rectangle to the center of\r\n        // the circle\r\n        var xNearest = Math.max(this.x, Math.min(this.bird.x, this.width+this.x));\r\n        if (this.isBottom)\r\n            var yNearest = Math.max(this.y, Math.min(this.bird.y, this.y2));\r\n        else\r\n            var yNearest = Math.max(this.y2, Math.min(this.bird.y, this.y));\r\n\r\n        // Find the distance between the\r\n        // nearest polet and the center\r\n        // of the circle\r\n        // Distance between 2 polets,\r\n        // (x1, y1) & (x2, y2) in\r\n        // 2D Euclidean space is\r\n        // ((x1-x2)**2 + (y1-y2)**2)**0.5\r\n        let dX = xNearest - this.bird.x;\r\n        let dY = yNearest - this.bird.y;\r\n        return (dX * dX + dY * dY) <= birdR * birdR;\r\n    }\r\n\r\n    draw(){\r\n        if (this.isBottom){\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.x,this.y);    // Move the pen to (30, 50)\r\n            this.ctx.lineTo(this.x,this.y+this.topHeight);  // Draw a line to (150, 100)\r\n            this.ctx.lineTo(this.x+2,this.y+this.topHeight);\r\n            this.ctx.lineTo(this.x+2+this.width,this.y+this.topHeight);\r\n            this.ctx.fill()\r\n            this.ctx.stroke();\r\n            this.ctx.moveTo(this.x+2,this.y+this.topHeight)\r\n            this.ctx.lineTo(this.x+2,this.ctx.canvas.height);\r\n            \r\n            this.ctx.lineTo(this.x+this.width,this.ctx.canvas.height);\r\n\r\n            this.ctx.lineTo(this.x+this.width,this.y+this.topHeight);\r\n            this.ctx.lineTo(this.x+this.width+2,this.y+this.topHeight);\r\n            this.ctx.lineTo(this.x+this.width+2,this.y)\r\n\r\n            this.ctx.lineTo(this.x,this.y);\r\n\r\n            this.ctx.fillStyle = this.color;\r\n            this.ctx.fill();\r\n            this.ctx.lineWidth = 1\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n        else{\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.x,this.y);    // Move the pen to (30, 50)\r\n            this.ctx.lineTo(this.x,this.y-this.topHeight);  // Draw a line to (150, 100)\r\n            this.ctx.lineTo(this.x+2,this.y-this.topHeight);\r\n            this.ctx.lineTo(this.x+2+this.width,this.y-this.topHeight);\r\n            this.ctx.fill()\r\n            this.ctx.stroke();\r\n            this.ctx.moveTo(this.x+2,this.y-this.topHeight)\r\n            this.ctx.lineTo(this.x+2,0);\r\n            \r\n            this.ctx.lineTo(this.x+this.width,0);\r\n\r\n            this.ctx.lineTo(this.x+this.width,this.y-this.topHeight);\r\n            this.ctx.lineTo(this.x+this.width+2,this.y-this.topHeight);\r\n            this.ctx.lineTo(this.x+this.width+2,this.y)\r\n\r\n            this.ctx.lineTo(this.x,this.y);\r\n\r\n            this.ctx.fillStyle = this.color;\r\n            this.ctx.fill();\r\n            this.ctx.lineWidth = 1\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\asteriods\\bullet.js",[],"C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\asteriods\\asteriodRock.js",["120"],"import { Object2D } from \"../../physicsObjects/object2D\";\r\nexport class AsteriodRock extends Object2D{\r\n    constructor(parent, startingCoords, startingVel, size,id){\r\n        super(startingCoords,startingVel, null);\r\n        this.dead = false;\r\n        this.parent = parent;\r\n        this.size = size;\r\n        this.id = id;\r\n\r\n        // do random stuff per sizes here\r\n        switch(size){\r\n            case \"small\":\r\n                this.health = 3;\r\n                this.drawPath = [[-5, 9],  [4, 8],   [8, 4],   \r\n                                [8, -5],  [-2, -8], [-2, -3], \r\n                                [-8, -4], [-8, 4],  [-5, 10]];\r\n                this.angularVel = Math.random()*6-3;\r\n                this.screenLoopBuffer = 10;\r\n                this.circleSize = 15;\r\n                break;\r\n            case \"med\":\r\n                this.health = 10;\r\n                this.drawPath = [[2, 8],    [8, 15],    [12, 8], \r\n                                [6, 2],    [12, -6],   [2, -15],\r\n                                [-6, -15], [-14, -10], [-15, 0],\r\n                                [-4, 15],  [2, 8]]\r\n                this.angularVel = Math.random()*3-1.5;\r\n                this.screenLoopBuffer = 15;\r\n                this.circleSize = 20;\r\n                break;\r\n            case \"large\":\r\n                this.health = 20;\r\n                this.drawPath = [[0, 12],    [8, 20], [16, 14],\r\n                                [10, 12],   [20, 0], [0, -20],\r\n                                [-18, -10], [-20, -2], [-20, 14],\r\n                                [-10, 20],  [0, 12]]\r\n                this.dx = Math.random() - .5// random(-2.1, 2.1));\r\n            \tthis.dy = Math.random() - .5//random(-2.1, 2.1));\r\n                this.angularVel = Math.random()*1.5-.75;\r\n                this.screenLoopBuffer = 20;\r\n                this.circleSize = 23;\r\n                break;\r\n        }\r\n\r\n\r\n        this.debug = false;\r\n\r\n        this.screenLoop = true;\r\n\r\n\r\n\r\n    }\r\n    takeDamage(amount){\r\n        this.health -= amount;\r\n        if (this.health <= 0 && !this.dead){\r\n            this.die();\r\n            if (this.size === \"large\"){\r\n                this.parent.spawnMedRocks(this);\r\n            }\r\n            else if (this.size === \"med\"){\r\n                this.parent.spawnSmallRocks(this);\r\n            }\r\n        }\r\n    }\r\n  \r\n    die(){\r\n        this.dead = true;\r\n    }\r\n\r\n    reset(){\r\n        super.reset();\r\n    }\r\n    draw(){\r\n\r\n        if (this.dead){\r\n            return;\r\n        }\r\n         \r\n        // alert(JSON.stringify(this.ctx))\r\n       \r\n        this.ctx.lineWidth = 1  ;  \r\n        this.ctx.strokeStyle = \"white\"\r\n\r\n\r\n        if (this.debug){\r\n       \r\n            \r\n            this.font = '48px serif';\r\n            this.ctx.textAlign = \"center\"\r\n            this.ctx.fillStyle = \"white\";  //<======= here\r\n            this.ctx.fillText(this.id,this.x,this.y)\r\n\r\n            // debug center of mass\r\n            this.ctx.beginPath();\r\n            // this.ctx.moveTo(this.x,this.y+10);\r\n            // this.ctx.lineTo(this.x,this.y-10);\r\n            // this.ctx.moveTo(this.x+10,this.y);\r\n            // this.ctx.lineTo(this.x-10,this.y);\r\n            // this.ctx.stroke();\r\n            this.ctx.arc(this.x, this.y, this.circleSize, 0, Math.PI*2, false);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n\r\n        }\r\n        \r\n        \r\n\r\n\r\n        this.ctx.save()\r\n\r\n\r\n        this.ctx.translate(this.x,this.y);\r\n        this.ctx.rotate(this.angleToRad(this.rotation))\r\n   \r\n        this.ctx.beginPath();\r\n\r\n        // Instructions here\r\n        this.ctx.moveTo(this.drawPath[0][0],this.drawPath[0][1]);\r\n\r\n        for (var i = 1; i < this.drawPath.length; i++){\r\n            this.ctx.lineTo(this.drawPath[i][0],this.drawPath[i][1])\r\n        }\r\n\r\n        this.ctx.stroke();\r\n        this.ctx.closePath();  \r\n        this.ctx.translate(-this.x,-this.y);\r\n\r\n        this.ctx.restore();\r\n\r\n\r\n    }\r\n}\r\n\r\n// void Ship::applyThrust()\r\n// {\r\n// \tint rot = getRotation() + 90;\r\n// \tfloat power = thrustPower;\r\n// \tvelocity.addDx(THRUST_AMOUNT * power * cos(3.14159265359 / 180.0 * rot));\r\n// \tvelocity.addDy(THRUST_AMOUNT * power * sin(3.14159265359 / 180.0 * rot));\r\n// }\r\n\r\n// void Ship::applyBreaks()\r\n// {\r\n// \tint rot = getRotation() + 90;\r\n// \tfloat breaks = getBreakPower();\r\n\r\n// \tfloat newDx = velocity.getDx() - breaks * (cos(3.14159265359 / 180.0 * rot));\r\n// \tfloat newDy = velocity.getDy() - breaks * (sin(3.14159265359 / 180.0 * rot));\r\n// \tstd::cout << newDx << \" ,  \" << newDy << \"\\n\";\r\n// \tvelocity.setDx(newDx);\r\n// \tvelocity.setDy(newDy);\r\n\r\n// \tif (velocity.getSpeed() < 0)\r\n// \t{\r\n// \t\tvelocity.setDx(0);\r\n// \t\tvelocity.setDy(0);\r\n// \t}\r\n// }\r\n\r\n// ultra simple point\r\n// struct PT\r\n// {\r\n//    int x;\r\n//    int y;\r\n// };\r\n\r\n// // draw the ship                                                 \r\n// const PT pointsShip[] = \r\n// { // top   r.wing   r.engine l.engine  l.wing    top\r\n//    {0, 6}, {6, -6}, {2, -3}, {-2, -3}, {-6, -6}, {0, 6}  \r\n// };\r\n\r\n// glBegin(GL_LINE_STRIP);\r\n// for (int i = 0; i < sizeof(pointsShip)/sizeof(PT); i++)\r\n// {\r\n//    Point pt(center.getX() + pointsShip[i].x, \r\n//             center.getY() + pointsShip[i].y);\r\n//    rotate(pt, center, rotation);\r\n//    glVertex2f(pt.getX(), pt.getY());\r\n// }\r\n// glEnd();\r\n\r\n// // draw the flame if necessary\r\n// if (thrust)\r\n// {\r\n//    const PT pointsFlame[3][5] =\r\n//    {\r\n//       { {-2, -3}, {-2, -13}, { 0, -6}, { 2, -13}, {2, -3} },\r\n//       { {-2, -3}, {-4,  -9}, {-1, -7}, { 1, -14}, {2, -3} },\r\n//       { {-2, -3}, {-1, -14}, { 1, -7}, { 4,  -9}, {2, -3} }\r\n//    };\r\n   \r\n//    glBegin(GL_LINE_STRIP);\r\n//    glColor3f(1.0 /* red % */, 0.0 /* green % */, 0.0 /* blue % */);\r\n//    int iFlame = random(0, 3);\r\n//    for (int i = 0; i < 5; i++)\r\n//    {\r\n//       Point pt(center.getX() + pointsFlame[iFlame][i].x, \r\n//                center.getY() + pointsFlame[iFlame][i].y);\r\n//       rotate(pt, center, rotation);\r\n//       glVertex2f(pt.getX(), pt.getY());\r\n//    }\r\n//    glColor3f(1.0, 1.0, 1.0); // reset to white                                  \r\n//    glEnd();","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\demos\\gameObjects\\asteriods\\asteriodPlayer.js",["121"],"import { Object2D } from \"../../physicsObjects/object2D\";\r\nexport class AsteriodsPlayer extends Object2D{\r\n    constructor(parent, startingCoords){\r\n        super(startingCoords,{dx:0,dy:0},null);\r\n        this.level = 1\r\n        this.dead = false;\r\n        this.parent = parent;\r\n        this.thrustPower = .01; //affects velocity from thrust;\r\n        this.bulletSpeed = 1;\r\n        this.bulletDamage = 1;\r\n\r\n        this.circleSize = 9;\r\n\r\n\t    this.agility = 1; //affects turn speed\r\n\t    this.breakPower= 1;\r\n\r\n        this.angularVel = 0;\r\n\r\n        this.debug = false;\r\n\r\n        this.leftIsDown = false;\r\n        this.rightIsDown = false;\r\n        this.upIsDown = false;\r\n\r\n        this.screenLoop = true;\r\n        this.screenLoopBuffer = 5;\r\n\r\n        this.drawPath = [[0, 6], [6, -6], [2, -3], [-2, -3], [-6, -6], [0, 6]];\r\n        this.drawFlamePath1 = [[-2, -3], [-2, -13], [ 0, -6], [ 2, -13], [2, -3]];\r\n        this.drawFlamePath2 = [[-2, -3], [-4,  -9], [-1, -7], [ 1, -14], [2, -3]];\r\n        this.drawFlamePath3 = [[-2, -3], [-1, -14], [ 1, -7], [ 4,  -9], [2, -3]];            \r\n                            \r\n    }\r\n\r\n\r\n\r\n    accelerate(){\r\n        var rot = this.rotation + 90;\r\n        this.dx+=(1 * this.thrustPower * Math.cos(this.pi / 180.0 * rot));\r\n        this.dy+=(1 * this.thrustPower * Math.sin(this.pi / 180.0 * rot));\r\n    }\r\n\r\n    update(callback){\r\n        super.update();\r\n\r\n        if (this.rightIsDown){\r\n            this.rotation += this.agility;\r\n        }\r\n        if (this.leftIsDown){\r\n            this.rotation -= this.agility;\r\n        }\r\n        if (this.upIsDown){\r\n            this.accelerate();\r\n        }\r\n    }\r\n\r\n    die(){\r\n        this.dead = true;\r\n        this.parent.stopGame();\r\n    }\r\n\r\n    reset(){\r\n        super.reset();\r\n    }\r\n    draw(){\r\n       \r\n        this.ctx.lineWidth = 1  ;  \r\n        this.ctx.strokeStyle = \"white\"\r\n\r\n\r\n        if (this.debug){\r\n            // debug text\r\n            // this.font = '48px serif';\r\n            // this.ctx.textAlign = \"center\"\r\n            // this.ctx.fillStyle = \"white\";  //<======= here\r\n            // this.ctx.fillText(this.upIsDown,this.x,this.y-20);\r\n            \r\n            // debug center of mass\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.x,this.y+10);\r\n            this.ctx.lineTo(this.x,this.y-10);\r\n            this.ctx.moveTo(this.x+10,this.y);\r\n            this.ctx.lineTo(this.x-10,this.y);\r\n            this.ctx.stroke();\r\n            this.ctx.arc(this.x, this.y, this.circleSize, 0, Math.PI*2, false);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n\r\n        }\r\n        \r\n        this.ctx.save()\r\n\r\n        this.ctx.translate(this.x,this.y);\r\n        this.ctx.rotate(this.angleToRad(this.rotation))\r\n\r\n        this.ctx.beginPath();\r\n\r\n        this.ctx.moveTo(this.drawPath[0][0],this.drawPath[0][1]);\r\n\r\n        for (var i = 1; i < this.drawPath.length; i++){\r\n            this.ctx.lineTo(this.drawPath[i][0],this.drawPath[i][1])\r\n        }\r\n\r\n        this.ctx.stroke();\r\n\r\n        if (this.upIsDown){\r\n            var randomFlamePathNum = Math.floor(Math.random()*3)+1;\r\n\r\n            var flamePath = (randomFlamePathNum === 1? this.drawFlamePath1:(randomFlamePathNum === 2? this.drawFlamePath2: this.drawFlamePath3));\r\n\r\n            this.ctx.moveTo(flamePath[0][0],flamePath[0][1]);\r\n            for (var i = 1; i < flamePath.length; i++){\r\n                this.ctx.lineTo(flamePath[i][0],flamePath[i][1])\r\n            }\r\n        }\r\n\r\n        this.ctx.stroke();\r\n        this.ctx.closePath();  \r\n        this.ctx.translate(-this.x,-this.y);\r\n\r\n        this.ctx.restore();\r\n\r\n\r\n    }\r\n}\r\n\r\n// void Ship::applyThrust()\r\n// {\r\n// \tint rot = getRotation() + 90;\r\n// \tfloat power = thrustPower;\r\n// \tvelocity.addDx(THRUST_AMOUNT * power * cos(3.14159265359 / 180.0 * rot));\r\n// \tvelocity.addDy(THRUST_AMOUNT * power * sin(3.14159265359 / 180.0 * rot));\r\n// }\r\n\r\n// void Ship::applyBreaks()\r\n// {\r\n// \tint rot = getRotation() + 90;\r\n// \tfloat breaks = getBreakPower();\r\n\r\n// \tfloat newDx = velocity.getDx() - breaks * (cos(3.14159265359 / 180.0 * rot));\r\n// \tfloat newDy = velocity.getDy() - breaks * (sin(3.14159265359 / 180.0 * rot));\r\n// \tstd::cout << newDx << \" ,  \" << newDy << \"\\n\";\r\n// \tvelocity.setDx(newDx);\r\n// \tvelocity.setDy(newDy);\r\n\r\n// \tif (velocity.getSpeed() < 0)\r\n// \t{\r\n// \t\tvelocity.setDx(0);\r\n// \t\tvelocity.setDy(0);\r\n// \t}\r\n// }\r\n\r\n// ultra simple point\r\n// struct PT\r\n// {\r\n//    int x;\r\n//    int y;\r\n// };\r\n\r\n// // draw the ship                                                 \r\n// const PT pointsShip[] = \r\n// { // top   r.wing   r.engine l.engine  l.wing    top\r\n//    {0, 6}, {6, -6}, {2, -3}, {-2, -3}, {-6, -6}, {0, 6}  \r\n// };\r\n\r\n// glBegin(GL_LINE_STRIP);\r\n// for (int i = 0; i < sizeof(pointsShip)/sizeof(PT); i++)\r\n// {\r\n//    Point pt(center.getX() + pointsShip[i].x, \r\n//             center.getY() + pointsShip[i].y);\r\n//    rotate(pt, center, rotation);\r\n//    glVertex2f(pt.getX(), pt.getY());\r\n// }\r\n// glEnd();\r\n\r\n// // draw the flame if necessary\r\n// if (thrust)\r\n// {\r\n//    const PT pointsFlame[3][5] =\r\n//    {\r\n//       { {-2, -3}, {-2, -13}, { 0, -6}, { 2, -13}, {2, -3} },\r\n//       { {-2, -3}, {-4,  -9}, {-1, -7}, { 1, -14}, {2, -3} },\r\n//       { {-2, -3}, {-1, -14}, { 1, -7}, { 4,  -9}, {2, -3} }\r\n//    };\r\n   \r\n//    glBegin(GL_LINE_STRIP);\r\n//    glColor3f(1.0 /* red % */, 0.0 /* green % */, 0.0 /* blue % */);\r\n//    int iFlame = random(0, 3);\r\n//    for (int i = 0; i < 5; i++)\r\n//    {\r\n//       Point pt(center.getX() + pointsFlame[iFlame][i].x, \r\n//                center.getY() + pointsFlame[iFlame][i].y);\r\n//       rotate(pt, center, rotation);\r\n//       glVertex2f(pt.getX(), pt.getY());\r\n//    }\r\n//    glColor3f(1.0, 1.0, 1.0); // reset to white                                  \r\n//    glEnd();","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\components\\navbar.js",["122"],"import React from 'react';\r\n\r\nexport function NavBar(props){\r\n    return (\r\n\r\n    <div  className=\"NavBar\"  style={{alignItems: 'flex-end', zIndex:1}}>\r\n        <a onClick={()=>{props.showDebug()}}>Debug</a>\r\n        <a href=\"#ContactDiv\">Contact</a>\r\n        <a href=\"#VRDiv\">VR</a>\r\n        <a href=\"#PortfolioDiv\">Portfolio</a>\r\n        <a href=\"#HomeDiv\">Home</a> \r\n      </div>\r\n    )\r\n  }","C:\\Users\\jadon.erwin\\OneDrive - CentauriCorp\\Desktop\\Jadon's Stuff\\My Website\\site\\src\\vr\\vrpage.js",["123","124","125","126","127","128","129","130","131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":15},{"ruleId":"137","severity":1,"message":"141","line":6,"column":10,"nodeType":"139","messageId":"140","endLine":6,"endColumn":17},{"ruleId":"137","severity":1,"message":"142","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":16},{"ruleId":"137","severity":1,"message":"143","line":45,"column":22,"nodeType":"139","messageId":"140","endLine":45,"endColumn":35},{"ruleId":"137","severity":1,"message":"144","line":1,"column":10,"nodeType":"139","messageId":"140","endLine":1,"endColumn":22},{"ruleId":"137","severity":1,"message":"145","line":2,"column":17,"nodeType":"139","messageId":"140","endLine":2,"endColumn":26},{"ruleId":"137","severity":1,"message":"146","line":2,"column":28,"nodeType":"139","messageId":"140","endLine":2,"endColumn":34},{"ruleId":"137","severity":1,"message":"147","line":63,"column":13,"nodeType":"139","messageId":"140","endLine":63,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":95,"column":94,"nodeType":"150","messageId":"151","endLine":95,"endColumn":96},{"ruleId":"137","severity":1,"message":"145","line":2,"column":17,"nodeType":"139","messageId":"140","endLine":2,"endColumn":26},{"ruleId":"137","severity":1,"message":"152","line":8,"column":7,"nodeType":"139","messageId":"140","endLine":8,"endColumn":12},{"ruleId":"137","severity":1,"message":"153","line":9,"column":7,"nodeType":"139","messageId":"140","endLine":9,"endColumn":11},{"ruleId":"137","severity":1,"message":"154","line":10,"column":7,"nodeType":"139","messageId":"140","endLine":10,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":32,"column":27,"nodeType":"157","endLine":32,"endColumn":28},{"ruleId":"155","severity":1,"message":"158","line":33,"column":27,"nodeType":"157","endLine":33,"endColumn":28},{"ruleId":"155","severity":1,"message":"159","line":34,"column":25,"nodeType":"157","endLine":34,"endColumn":26},{"ruleId":"155","severity":1,"message":"160","line":35,"column":24,"nodeType":"157","endLine":35,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":46,"column":9,"nodeType":"163","messageId":"164","endLine":65,"endColumn":10},{"ruleId":"165","severity":1,"message":"166","line":166,"column":5,"nodeType":"167","messageId":"151","endLine":177,"endColumn":6},{"ruleId":"148","severity":1,"message":"168","line":168,"column":28,"nodeType":"150","messageId":"151","endLine":168,"endColumn":30},{"ruleId":"148","severity":1,"message":"168","line":173,"column":28,"nodeType":"150","messageId":"151","endLine":173,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":59,"column":17,"nodeType":"139","messageId":"171","endLine":59,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":11,"column":9,"nodeType":"163","messageId":"164","endLine":43,"endColumn":10},{"ruleId":"169","severity":1,"message":"172","line":112,"column":22,"nodeType":"139","messageId":"171","endLine":112,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":7,"column":9,"nodeType":"175","endLine":7,"endColumn":46},{"ruleId":"137","severity":1,"message":"176","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"137","severity":1,"message":"177","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":16},{"ruleId":"137","severity":1,"message":"178","line":4,"column":17,"nodeType":"139","messageId":"140","endLine":4,"endColumn":23},{"ruleId":"137","severity":1,"message":"179","line":31,"column":10,"nodeType":"139","messageId":"140","endLine":31,"endColumn":24},{"ruleId":"155","severity":1,"message":"180","line":35,"column":56,"nodeType":"181","endLine":35,"endColumn":58,"suggestions":"182"},{"ruleId":"137","severity":1,"message":"183","line":47,"column":12,"nodeType":"139","messageId":"140","endLine":47,"endColumn":16},{"ruleId":"137","severity":1,"message":"184","line":47,"column":18,"nodeType":"139","messageId":"140","endLine":47,"endColumn":25},{"ruleId":"155","severity":1,"message":"185","line":56,"column":5,"nodeType":"139","endLine":56,"endColumn":14,"suggestions":"186"},{"ruleId":"161","severity":1,"message":"162","line":73,"column":13,"nodeType":"163","messageId":"164","endLine":90,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":94,"column":13,"nodeType":"163","messageId":"164","endLine":107,"endColumn":14},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'profile' is defined but never used.","Identifier","unusedVar","'GameBoy' is defined but never used.","'ReactDOM' is defined but never used.","'setCanScrollX' is assigned a value but never used.","'useStopwatch' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'draggedObject' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hours' is assigned a value but never used.","'days' is assigned a value but never used.","'isRunning' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'seconds' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Literal","Assignments to the 'minutes' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'hours' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'days' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-dupe-class-members","Duplicate name 'changeLevel'.","MethodDefinition","Expected '!==' and instead saw '!='.","no-redeclare","'yNearest' is already defined.","redeclared","'i' is already defined.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'Canvas' is defined but never used.","'extend' is defined but never used.","'CameraControls' is defined but never used.","React Hook useEffect has a missing dependency: 'set'. Either include it or remove the dependency array.","ArrayExpression",["189"],"'camY' is assigned a value but never used.","'setCamY' is assigned a value but never used.","React Hook useEffect contains a call to 'setCamZ'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [upKeyDown, downKeyDown, rightKeyDown, leftKeyDown, camZ, camX] as a second argument to the useEffect Hook.",["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [set]",{"range":"195","text":"196"},"Add dependencies array: [upKeyDown, downKeyDown, rightKeyDown, leftKeyDown, camZ, camX]",{"range":"197","text":"198"},[1327,1329],"[set]",[2336,2336],", [upKeyDown, downKeyDown, rightKeyDown, leftKeyDown, camZ, camX]"]